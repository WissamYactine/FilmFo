{"ast":null,"code":"var _jsxFileName = \"/Users/wissam/Desktop/movie-rating-app/client/src/components/Movies/Movie/Movie.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Container, Card, /*CardActions, CardContent,*/CardMedia, Button, IconButton, Typography, /*Grid, createSvgIcon, SvgIcon,*/Popover } from '@material-ui/core';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\n// import FavoriteIcon from '@mui/icons-material/Favorite';\nimport StarsIcon from '@mui/icons-material/Stars';\nimport CloseIcon from '@mui/icons-material/Close';\nimport useStyles from './styles';\n// import useEffect from 'react';\n\n// import { useDispatch } from 'react-redux';\n\nimport MovieDetails from '../MovieDetails/MovieDetails';\n\n// import { getMovieById } from '../../../actions/movies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movie = ({\n  movie\n}) => {\n  _s();\n  const classes = useStyles();\n  const [open, setPopOpen] = React.useState(false);\n  const handleClick = e => {\n    if (open) {\n      const popoverElement = document.querySelector(\".popoverCard\");\n      if (!popoverElement.contains(e.target)) {\n        setPopOpen(false);\n      }\n    }\n  };\n  const handleKeyDown = e => {\n    if (open) {\n      if (e.key === 'Escape') {\n        setPopOpen(false);\n      }\n    }\n  };\n  const id = open ? 'simple-popover' : undefined;\n  const handleChildElementClick = e => {\n    e.stopPropagation();\n    console.log(\"hey\");\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    onClick: handleClick,\n    onKeyUp: handleKeyDown,\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      onClick: () => setPopOpen(true),\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        className: classes.media,\n        image: movie.posterurl,\n        title: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.overlay,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: movie.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.details,\n          children: [/*#__PURE__*/_jsxDEV(StarsIcon, {\n            sx: {\n              fontSize: 30\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"\\xA0 \", movie.imdbRating, \"/10\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.overlay2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            color: 'yellow'\n          },\n          size: \"small\",\n          onClick: e => handleChildElementClick(e),\n          children: /*#__PURE__*/_jsxDEV(FavoriteBorderIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      id: id,\n      open: open,\n      anchorReference: 'none',\n      classes: {\n        root: classes.popoverRoot\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"popoverCard\",\n        style: {\n          backgroundColor: '#000050'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          className: classes.closePop,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            style: {\n              color: 'white',\n              size: 'medium'\n            },\n            onClick: () => setPopOpen(false),\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MovieDetails, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Movie, \"dzdg+qwB8mETIebPiv54LYJ6VUw=\", false, function () {\n  return [useStyles];\n});\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","Container","Card","CardMedia","Button","IconButton","Typography","Popover","FavoriteBorderIcon","StarsIcon","CloseIcon","useStyles","MovieDetails","jsxDEV","_jsxDEV","Movie","movie","_s","classes","open","setPopOpen","useState","handleClick","e","popoverElement","document","querySelector","contains","target","handleKeyDown","key","id","undefined","handleChildElementClick","stopPropagation","console","log","onClick","onKeyUp","children","className","card","media","image","posterurl","title","fileName","_jsxFileName","lineNumber","columnNumber","overlay","variant","year","details","sx","fontSize","imdbRating","overlay2","style","color","size","anchorReference","root","popoverRoot","backgroundColor","closePop","_c","$RefreshReg$"],"sources":["/Users/wissam/Desktop/movie-rating-app/client/src/components/Movies/Movie/Movie.js"],"sourcesContent":["import React from 'react';\nimport { Container, Card, /*CardActions, CardContent,*/ CardMedia, Button, IconButton, Typography, /*Grid, createSvgIcon, SvgIcon,*/ Popover } from '@material-ui/core';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\n// import FavoriteIcon from '@mui/icons-material/Favorite';\nimport StarsIcon from '@mui/icons-material/Stars';\nimport CloseIcon from '@mui/icons-material/Close';\nimport useStyles from './styles';\n// import useEffect from 'react';\n\n// import { useDispatch } from 'react-redux';\n\nimport MovieDetails from '../MovieDetails/MovieDetails';\n\n// import { getMovieById } from '../../../actions/movies';\n\nconst Movie = ({ movie }) => {\n    const classes = useStyles();\n    const [open, setPopOpen] = React.useState(false);\n\n    const handleClick = (e) => {\n        if(open) {\n            const popoverElement = document.querySelector(\".popoverCard\");\n            if(!popoverElement.contains(e.target)) {\n                setPopOpen(false);\n            }\n        }\n    }\n\n    const handleKeyDown = (e) => {\n        if(open) {\n            if(e.key === 'Escape') {\n                setPopOpen(false);\n            }\n        }\n    }\n\n    const id = open ? 'simple-popover' : undefined;\n\n    const handleChildElementClick = (e) => {\n        e.stopPropagation();\n        console.log(\"hey\");\n    }\n\n    return (\n        <Container onClick={handleClick} onKeyUp={handleKeyDown}>\n            <Card className={classes.card} onClick={() => setPopOpen(true)}>\n                <CardMedia className={classes.media} image={movie.posterurl} title={movie.title}/>\n                <div className={classes.overlay}>\n                    <Typography variant=\"h4\">{movie.title}</Typography>\n                    <Typography variant=\"h6\">{movie.year}</Typography> \n                    <div className={classes.details}>\n                        <StarsIcon sx={{ fontSize: 30 }}></StarsIcon>\n                        <Typography variant=\"h6\">&nbsp; {movie.imdbRating}/10</Typography>\n                    </div>         \n                </div>\n                <div className={classes.overlay2}>\n                    <Button  style={{ color: 'yellow' }} size=\"small\" onClick={(e) => handleChildElementClick(e)}>\n                        <FavoriteBorderIcon fontSize='large' />\n                    </Button>\n                </div>\n            </Card>\n            <Popover\n                id={id}\n                open={open}\n                anchorReference={'none'}\n                classes={{\n                    root: classes.popoverRoot,\n                    }}\n            >\n                <Container className='popoverCard' style={{ backgroundColor: '#000050' }}>\n                    <Container className={classes.closePop}>\n                        <IconButton style={{ color: 'white', size: 'medium'}} onClick={() => setPopOpen(false)}>\n                            <CloseIcon fontSize='large' ></CloseIcon>\n                        </IconButton>\n                    </Container>\n                    <MovieDetails movie={movie} />\n                </Container>\n            </Popover>\n        </Container>\n    );\n}\n\nexport default Movie;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}