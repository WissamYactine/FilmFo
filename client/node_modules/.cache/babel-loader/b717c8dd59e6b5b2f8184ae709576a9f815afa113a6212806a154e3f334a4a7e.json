{"ast":null,"code":"var _jsxFileName = \"/Users/wissam/Desktop/movie-rating-app/client/src/components/Auth/Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { GoogleLogin } from '@react-oauth/google';\n// import { useGoogleLogin } from '@react-oauth/google';\nimport { useDispatch } from 'react-redux';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Icon from './Icon';\nimport useStyles from './styles';\nimport Input from './Input';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignUp] = useState(false);\n  const dispatch = useDispatch();\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n  const switchMode = () => {\n    setIsSignUp(prevIsSignUp => !prevIsSignUp);\n    handleShowPassword(false);\n  };\n  const handleSubmit = () => {};\n  const handleChange = () => {};\n  const googleSuccess = async res => {\n    console.log(res);\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          result,\n          token\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const googleFailure = error => {\n    console.log(error);\n    console.log(\"Google Sign In was unsuccessful. Try Again Later\");\n  };\n\n  // const login = useGoogleLogin({\n  //     onSuccess: CodeResponse => googleSuccess(CodeResponse),\n  //     // onError: googleFailure(),\n  //     flow: 'auth-code',\n  // })\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: isSignup ? 'Sign Up' : 'Sign In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstName\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"lastName\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email Address\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Password\",\n            handleChange: handleChange,\n            type: showPassword ? 'text' : 'password',\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), isSignup && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            label: \"Repeat Password\",\n            handleChange: handleChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignup ? 'Sign Up' : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onSuccess: googleSuccess,\n          onError: googleFailure\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchMode,\n              children: isSignup ? 'Already have an account? Sign In' : \"Don't have an account? Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"bLeObW0AswsWmC8PGtICDexP3hw=\", false, function () {\n  return [useStyles, useDispatch];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","Avatar","Button","Paper","Grid","Typography","Container","GoogleLogin","useDispatch","LockOutlinedIcon","Icon","useStyles","Input","jsxDEV","_jsxDEV","Fragment","_Fragment","Auth","_s","classes","showPassword","setShowPassword","isSignup","setIsSignUp","dispatch","handleShowPassword","prevShowPassword","switchMode","prevIsSignUp","handleSubmit","handleChange","googleSuccess","res","console","log","result","profileObj","token","tokenId","type","data","error","googleFailure","component","maxWidth","children","className","paper","elevation","avatar","fileName","_jsxFileName","lineNumber","columnNumber","variant","form","onSubmit","container","spacing","name","label","autoFocus","half","fullWidth","color","submit","onSuccess","onError","justifyContent","item","onClick","_c","$RefreshReg$"],"sources":["/Users/wissam/Desktop/movie-rating-app/client/src/components/Auth/Auth.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { GoogleLogin } from '@react-oauth/google';\n// import { useGoogleLogin } from '@react-oauth/google';\nimport { useDispatch } from 'react-redux';\n\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Icon from './Icon';\nimport useStyles from './styles';\nimport Input from './Input';\n\nconst Auth = () => {\n    const classes = useStyles();\n    const [showPassword, setShowPassword] = useState(false);\n    const [isSignup, setIsSignUp] = useState(false);\n    const dispatch = useDispatch();\n\n    const handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword);\n\n    const switchMode = () => {\n        setIsSignUp((prevIsSignUp) => !prevIsSignUp);\n        handleShowPassword(false);\n    };\n    \n    const handleSubmit = () => {\n\n    };\n\n    const handleChange = () => {\n\n    };\n\n    const googleSuccess = async (res) => {\n        console.log(res);\n        const result = res?.profileObj;\n        const token = res?.tokenId;\n\n        try {\n            dispatch({type: 'AUTH', data: { result, token } });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const googleFailure = (error) => {\n        console.log(error);\n        console.log(\"Google Sign In was unsuccessful. Try Again Later\");\n    };\n\n    // const login = useGoogleLogin({\n    //     onSuccess: CodeResponse => googleSuccess(CodeResponse),\n    //     // onError: googleFailure(),\n    //     flow: 'auth-code',\n    // })\n    \n  return (\n    <Container component='main' maxWidth='xs'>\n        <Paper className={classes.paper} elevation={3}>\n            <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n            </Avatar>\n            <Typography variant='h5'>{isSignup ? 'Sign Up' : 'Sign In'}</Typography>\n            <form className={classes.form} onSubmit={handleSubmit}>\n                <Grid container spacing={2}>\n                    {\n                        isSignup && (\n                            <>\n                                <Input name='firstName' label='First Name' handleChange={handleChange} autoFocus half />\n                                <Input name='lastName' label='Last Name' handleChange={handleChange} half />\n                            </>\n                        )}\n                        <Input name='email' label='Email Address' handleChange={handleChange} type='email' />\n                        <Input name='password' label='Password' handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n                        { isSignup && <Input name='confirmPassword' label='Repeat Password' handleChange={handleChange} type='password' />}\n                </Grid>\n                <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>\n                    {isSignup ? 'Sign Up' : 'Sign In'}\n                </Button>\n                {/* Maybe use simply googleLogin */}\n                <GoogleLogin\n                    onSuccess={googleSuccess}\n                    onError={googleFailure}\n                />\n                {/* Currently using customlogin button with useGoogleLogin function to be able to design the button might just use googleLogin */}\n                {/* <Button className={classes.googleButton} color='primary' fullWidth onClick={() => login()} startIcon={<Icon />} variant='contained'>\n                    Google Sign In\n                </Button> */}\n\n                <Grid container justifyContent='flex-end'>\n                    <Grid item>\n                        <Button onClick={switchMode}>\n                            { isSignup ? 'Already have an account? Sign In' : \"Don't have an account? Sign Up\"}\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </Paper>\n    </Container>\n  );\n}\n\nexport default Auth;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}