{"ast":null,"code":"var _jsxFileName = \"/Users/wissam/Desktop/movie-rating-app/client/src/components/Auth/Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Icon from './Icon';\nimport useStyles from './styles';\nimport Input from './Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignUp] = useState(false);\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n  const switchMode = () => {\n    setIsSignUp(prevIsSignUp => !prevIsSignUp);\n    handleShowPassword(false);\n  };\n  const handleSubmit = () => {};\n  const handleChange = () => {};\n\n  // const googleSuccess = (res) => {\n  //     // console.log(res);\n  //     console.log(\"pasdof\");\n  // };\n\n  // const googleFailure = () => {\n  //     console.log(\"Google Sign In was unsuccessful. Try Again Later\");\n  // };\n\n  return (\n    /*#__PURE__*/\n    // <Container component='main' maxWidth='xs'>\n    //     <Paper className={classes.paper} elevation={3}>\n    //         <Avatar className={classes.avatar}>\n    //             <LockOutlinedIcon />\n    //         </Avatar>\n    //         <Typography variant='h5'>{isSignup ? 'Sign Up' : 'Sign In'}</Typography>\n    //         <form className={classes.form} onSubmit={handleSubmit}>\n    //             <Grid container spacing={2}>\n    //                 {\n    //                     isSignup && (\n    //                         <>\n    //                             <Input name='firstName' label='First Name' handleChange={handleChange} autoFocus half />\n    //                             <Input name='lastName' label='Last Name' handleChange={handleChange} half />\n    //                         </>\n    //                     )}\n    //                     <Input name='email' label='Email Address' handleChange={handleChange} type='email' />\n    //                     <Input name='password' label='Password' handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n    //                     { isSignup && <Input name='confirmPassword' label='Repeat Password' handleChange={handleChange} type='password' />}\n    //             </Grid>\n    //             <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>\n    //                 {isSignup ? 'Sign Up' : 'Sign In'}\n    //             </Button>\n    //             {/* <GoogleLogin\n    //                 clientId=\"615943721081-5b1g42tp8jjcdgu0vj28o355jrpr0ied.apps.googleusercontent.com\"\n    //                 render={(renderProps) => (\n    //                     <Button className={classes.googleButton} color='primary' fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant='contained'>\n    //                         Google Sign In\n    //                     </Button>\n    //                 )}\n    //                 onSuccess={googleSuccess}\n    //                 onFailure={googleFailure}\n    //                 cookiePolicy=\"signle_host_origin\"\n    //              /> */}\n    //             <Grid container justifyContent='flex-end'>\n    //                 <Grid item>\n    //                     <Button onClick={switchMode}>\n    //                         { isSignup ? 'Already have an account? Sign In' : \"Don't have an account? Sign Up\"}\n    //                     </Button>\n    //                 </Grid>\n    //             </Grid>\n    //         </form>\n    //     </Paper>\n    // </Container>\n    _jsxDEV(\"h1\", {\n      children: \"asldkj\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Auth, \"Ffp36824MObw3gKH6aYGTAjtTyc=\", false, function () {\n  return [useStyles];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","Avatar","Button","Paper","Grid","Typography","Container","GoogleLogin","LockOutlinedIcon","Icon","useStyles","Input","jsxDEV","_jsxDEV","Auth","_s","classes","showPassword","setShowPassword","isSignup","setIsSignUp","handleShowPassword","prevShowPassword","switchMode","prevIsSignUp","handleSubmit","handleChange","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/wissam/Desktop/movie-rating-app/client/src/components/Auth/Auth.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Icon from './Icon';\nimport useStyles from './styles';\nimport Input from './Input';\n\nconst Auth = () => {\n    const classes = useStyles();\n    const [showPassword, setShowPassword] = useState(false);\n    const [isSignup, setIsSignUp] = useState(false);\n\n\n    const handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword);\n\n    const switchMode = () => {\n        setIsSignUp((prevIsSignUp) => !prevIsSignUp);\n        handleShowPassword(false);\n    };\n    \n    const handleSubmit = () => {\n\n    };\n\n    const handleChange = () => {\n\n    };\n\n    // const googleSuccess = (res) => {\n    //     // console.log(res);\n    //     console.log(\"pasdof\");\n    // };\n\n    // const googleFailure = () => {\n    //     console.log(\"Google Sign In was unsuccessful. Try Again Later\");\n    // };\n\n\n    \n  return (\n    // <Container component='main' maxWidth='xs'>\n    //     <Paper className={classes.paper} elevation={3}>\n    //         <Avatar className={classes.avatar}>\n    //             <LockOutlinedIcon />\n    //         </Avatar>\n    //         <Typography variant='h5'>{isSignup ? 'Sign Up' : 'Sign In'}</Typography>\n    //         <form className={classes.form} onSubmit={handleSubmit}>\n    //             <Grid container spacing={2}>\n    //                 {\n    //                     isSignup && (\n    //                         <>\n    //                             <Input name='firstName' label='First Name' handleChange={handleChange} autoFocus half />\n    //                             <Input name='lastName' label='Last Name' handleChange={handleChange} half />\n    //                         </>\n    //                     )}\n    //                     <Input name='email' label='Email Address' handleChange={handleChange} type='email' />\n    //                     <Input name='password' label='Password' handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n    //                     { isSignup && <Input name='confirmPassword' label='Repeat Password' handleChange={handleChange} type='password' />}\n    //             </Grid>\n    //             <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>\n    //                 {isSignup ? 'Sign Up' : 'Sign In'}\n    //             </Button>\n    //             {/* <GoogleLogin\n    //                 clientId=\"615943721081-5b1g42tp8jjcdgu0vj28o355jrpr0ied.apps.googleusercontent.com\"\n    //                 render={(renderProps) => (\n    //                     <Button className={classes.googleButton} color='primary' fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant='contained'>\n    //                         Google Sign In\n    //                     </Button>\n    //                 )}\n    //                 onSuccess={googleSuccess}\n    //                 onFailure={googleFailure}\n    //                 cookiePolicy=\"signle_host_origin\"\n    //              /> */}\n    //             <Grid container justifyContent='flex-end'>\n    //                 <Grid item>\n    //                     <Button onClick={switchMode}>\n    //                         { isSignup ? 'Already have an account? Sign In' : \"Don't have an account? Sign Up\"}\n    //                     </Button>\n    //                 </Grid>\n    //             </Grid>\n    //         </form>\n    //     </Paper>\n\n    // </Container>\n    <h1>asldkj</h1>\n  );\n}\n\nexport default Auth;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,UAAU,EAAEC,SAAS,QAAQ,mBAAmB;AACtF,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,SAAS,MAAM,UAAU;AAChC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAMC,OAAO,GAAGN,SAAS,CAAC,CAAC;EAC3B,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAG/C,MAAMqB,kBAAkB,GAAGA,CAAA,KAAMH,eAAe,CAAEI,gBAAgB,IAAK,CAACA,gBAAgB,CAAC;EAEzF,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrBH,WAAW,CAAEI,YAAY,IAAK,CAACA,YAAY,CAAC;IAC5CH,kBAAkB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMI,YAAY,GAAGA,CAAA,KAAM,CAE3B,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM,CAE3B,CAAC;;EAED;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAIF;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACAb,OAAA;MAAAc,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;AAEnB,CAAC;AAAAhB,EAAA,CA/EKD,IAAI;EAAA,QACUJ,SAAS;AAAA;AAAAsB,EAAA,GADvBlB,IAAI;AAiFV,eAAeA,IAAI;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}